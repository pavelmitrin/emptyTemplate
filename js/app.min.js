let DB = data;

/* Swiper  on index.html*/
const swiper = new Swiper('.swiper', {
	loop: true,
	// If we need pagination
	pagination: {
		el: '.swiper-pagination',
		clickable: true,
	},
	// Navigation arrows
	navigation: {
		nextEl: '.swiper-button-next',
		prevEl: '.swiper-button-prev',
	},
	speed: 400,
	effect: "fade",
	fadeEffect: {
		crossFade: true,
	},
	slideToClickedSlide: false,
	allowTouchMove: false,
});

// link on header and footer
let itemsCatalog = catalog;
let headerCatalog = document.querySelector('#headerCatalog'),
	footerCatalog = document.querySelector('#footerCatalog');

let path = window.location.pathname;
let have = 0;
for (const key in itemsCatalog) {
	if (path.includes(`${key}.html`)) {
		have += 1;
	}
}
for (const key in itemsCatalog) {
		const element = itemsCatalog[key];
		
		if (have == 1) {
			let head = `<a href="${key}.html" class="header__second-link">${element.name}</a>`;
			let foot = `<a href="${key}.html" class="footer-links__link footer-links__link-active">${element.name}</a>`;
			headerCatalog.insertAdjacentHTML('beforeend', head);
			footerCatalog.insertAdjacentHTML('beforeend', foot);
		} else {
			let head = `<a href="pages/${key}.html" class="header__second-link">${element.name}</a>`;
			let foot = `<a href="pages/${key}.html" class="footer-links__link footer-links__link-active">${element.name}</a>`;
			headerCatalog.insertAdjacentHTML('beforeend', head);
			footerCatalog.insertAdjacentHTML('beforeend', foot);
		}
}

// catalog page
if (document.querySelector('#catalogItem')) {
	let catalogPage = document.querySelector('#catalogItem');

	for (const key in itemsCatalog) {
		const element = itemsCatalog[key];

		let item = `<a href="pages/${key}.html" class="catalog__item item">
			<div class="item__img">
				<img src="${element.previewImg}" alt="">
			</div>
			<div class="item__text">
				<h4 class="item__title">${element.name}</h4>
				<p class="item__description">${element.previewText}</p>
			</div>
		</a>`;

		catalogPage.insertAdjacentHTML('beforeend', item);
	}

	
}
// готовые 
if (document.querySelector('#equipmentProducts')) {
	let readyPage = document.querySelector('#equipmentProducts');

	DB.forEach(el => {
		if (el.isReady) {
			let item = `<div class="products__item" id="${el.article}">
				<a href="#product" class="product popup-link">
					<div class="product__img">
						<img src="catalog/${el.pictures[0]}" alt="">
					</div>
					<div class="product__text">
						<h4 class="product_title">${el.name}</h4>
						<p class="product__article">Арт. ${el.article}</p>
					</div>
					<button type="button">Подробнее</button>
				</a>
			</div>`;

			readyPage.insertAdjacentHTML('beforeend', item);
		}
	})

	
}

/* Typed */
if (document.querySelector('.element') != null) {
	let options = { strings: ["", "когда прогулка в парке действительно в радость", "пожалуй, лучшие детские игровые проcтранства", "когда игры для детей в саду действительно увлекательны"], typeSpeed: 60, backSpeed: 40, loop: !0, backDelay: 800 },
	typed = new Typed(".element", options);
};


/* Input range */
function range(item) {
	let selector = item.nextElementSibling;
	let selectorValue = selector.querySelector('.selector__value');

	selectorValue.innerHTML = item.value;
	if (item.closest('#body_2')) {
		selector.style.left = (item.value / 300000) + '%';
	} else if (item.closest('#body_3')) {
		if (+item.value === 1) {
			selector.style.left = `calc(${(100 / 11 * (+item.value - 1))}% + 12.5px)`;
		} else if (+item.value === 12) {
			selector.style.left = `calc(${(100 / 11 * (+item.value - 1))}% - 8px)`;
		} else {
			selector.style.left = (100 / 11 * (+item.value - 1)) + '%';
		}
	}
}


/* maskedinput plugin */
$.fn.setCursorPosition = function (pos) {
	if ($(this).get(0).setSelectionRange) {
		$(this).get(0).setSelectionRange(pos, pos);
	} else if ($(this).get(0).createTextRange) {
		var range = $(this).get(0).createTextRange();
		range.collapse(true);
		range.moveEnd('character', pos);
		range.moveStart('character', pos);
		range.select();
	}
};

/* validation */

$("#formTel").click(function () {
	$(this).setCursorPosition(3);
}).mask("+7 999 999 99 99");
$("#formTel").mask("+7 999 999 99 99");

$("#connectionCallTel").click(function () {
	$(this).setCursorPosition(3);
}).mask("+7 999 999 99 99");
$("#formTel").mask("+7 999 999 99 99");

$("#buyFormTel").click(function () {
	$(this).setCursorPosition(3);
}).mask("+7 999 999 99 99");
$("#formTel").mask("+7 999 999 99 99");



/* open buttons */

let buttonOpen = document.querySelectorAll('.btn-open');

buttonOpen.forEach(el => {
	el.addEventListener('click', () =>  {
		el.previousElementSibling.classList.toggle('hidden');
	})
})


// Получаем массив с данными каталога

if (document.querySelectorAll(".products__item").length !== 0) {
	let productModal = document.querySelector("#product"),
		productModalSlider = productModal.querySelector('.swiper-wrapper'),
		productModalName = productModal.querySelector('.desc__title'),
		productModalArticle = productModal.querySelector('.desc__article'),
		productModalOptions = productModal.querySelector('.desc__options ul'),
		productModalDescriptions = productModal.querySelector('.desc__descriptions');

		// productModalName = "aaaaaaaa";
	// console.log(productModalName);
	
	let items = document.querySelectorAll(".products__item");

	items.forEach(value => {
		value.addEventListener('click', () => {

			let id = value.id;
			
			DB.forEach(val => {
				
				if (val.article === id) {
					clearPopup();

					val.pictures.forEach((img, index) => {
						let slide;
						if (have === 0) {
							slide = `
										<div class="swiper-slide ${index === 0 ? "swiper-slide-visible swiper-slide-active" : ""} ${index === 1 ? "swiper-slide-next": ""}" role="group" aria-label="${index+1} / ${val.pictures.length}">
											<img src="catalog/${img}" alt="">
										</div>
									`;
						} else {
							slide = `
										<div class="swiper-slide ${index === 0 ? "swiper-slide-visible swiper-slide-active" : ""} ${index === 1 ? "swiper-slide-next": ""}" role="group" aria-label="${index+1} / ${val.pictures.length}">
											<img src="../catalog/${img}" alt="">
										</div>
									`;
						}
						productModalSlider.insertAdjacentHTML("beforeend",slide);
					})

/* Swiper  on catalog.html*/
const productPage = new Swiper('.product__images', {
	// loop: true,

	// Navigation arrows
	navigation: {
		nextEl: '.swiper-button-next',
		prevEl: '.swiper-button-prev',
	},
	speed: 400,
	effect: "fade",
	fadeEffect: {
		crossFade: true,
	},
	slideToClickedSlide: false,
	allowTouchMove: false,
});

					productModalName.textContent = val.name;
					productModalArticle.textContent = val.article;

					if (val.options.length !== 0) {
						val.options.forEach(option => {
							const optionItem = `<li>${option}</li>`;
							productModalOptions.insertAdjacentHTML('beforeend', optionItem);
						})
					} 

					if (val.description.length !== 0) {
						val.description.forEach(desc => {
							const descriptionItem = `<p>${desc}</p>`;
							productModalOptions.insertAdjacentHTML('beforeend', descriptionItem);
						})
					}

				}
			})

		})
	})
	function clearPopup() {
		productModalSlider.innerHTML = '';
		productModalName.textContent = '';
		productModalArticle.textContent = '';
		productModalOptions.innerHTML = '';
		productModalDescriptions.innerHTML = '';
	}
}
// Корзина
const buyButton = document.querySelector('.desc__price.popup-link');
const buyPage = document.getElementById('buy');
let cartProducts = buyPage.querySelector('.cart__products');
let buyList = [];
const buyIcon = document.querySelector('#buyCart');


if (localStorage.getItem('buyList')) {
	buyList = (JSON.parse(localStorage.getItem('buyList')));
	buyList.forEach(product => renderBuyList(product));
}


buyButton.addEventListener('click', addBuyProduct)
cartProducts.addEventListener('click', removeBuyProduct)
cartProducts.addEventListener('click', changeCount)

function addBuyProduct() {
	const article = buyButton.previousElementSibling.textContent.replace(/Арт. /, '');
	let buyProduct;

	DB.forEach(item => {
		if (item.article === article) {
			buyProduct = item;
		}
	})
	
	let picture = buyProduct.pictures[0],
		name = buyProduct.name;
	let newProduct = {
		name: name,
		count: 1,
		picture: `catalog/${picture}`,
		article: article
	}
	

	if (buyList.length !== 0) {
		let rep = 0;
		buyList.forEach((value, index) => {
			if (value.article === article) {
				buyList[index].count += 1;
				rep +=1; 
			}
		})
		if (rep === 0) {
			buyList.push(newProduct);
		}
		cartProducts.innerHTML = '';
		saveToLocalStorage();
		buyList.forEach(el => renderBuyList(el));
	} else {
		buyList.push(newProduct);
		saveToLocalStorage();

		renderBuyList(newProduct);
	}
	
	checkCart();
}
function removeBuyProduct(e) {
	if (e.target.closest('button') !== null && e.target.closest('button').classList.contains('cart__remove')) {
		const productRemove = e.target.closest('.cart__product');
		// console.log(productRemove);
		const productRemoveArticle = productRemove.querySelector('.cart__article').value.replace(/Арт. /, '');
		
		buyList = buyList.filter((item) => item.article != productRemoveArticle);
		saveToLocalStorage();
		
		productRemove.remove();
	}
	checkCart();
}

function saveToLocalStorage() {
	buyList = buyList.filter((product) => product.count != 0)
	localStorage.setItem('buyList', JSON.stringify(buyList));
	checkCart();
}
function renderBuyList(product) {
		const count = product.count;
		
		let cartProduct;
		if (have === 0) {
			cartProduct = `<div class="cart__product">
				<div class="cart__preview">
					<img src="${product.picture}" alt="">
				</div>
				<div class="cart__inform">
					<div class="cart__data">
						<h4 class="cart__name">${product.name}</h4>
						<input type="text"  class="cart__article" value="Арт. ${product.article}" readonly>
					</div>
	
					<div class="cart__amount">
					<button type="button" class="amountMinus"><img src="img/catalog/arrows_circle_minus.svg" alt=""></button>
					<input class="amount__Score" value="${product.count}" readonly>
					<button type="button" class="amountPlus"><img src="img/catalog/arrows_circle_plus.svg" alt=""></button>
					</div>
	
					<button type="button" class="cart__remove"><img src="img/catalog/arrows_circle_remove.svg" alt=""></button>
					
				</div>
			</div>
		`;
		} else {
			cartProduct = `<div class="cart__product">
				<div class="cart__preview">
					<img src="../${product.picture}" alt="">
				</div>
				<div class="cart__inform">
					<div class="cart__data">
						<h4 class="cart__name">${product.name}</h4>
						<input type="text"  class="cart__article" value="Арт. ${product.article}" readonly>
					</div>
	
					<div class="cart__amount">
					<button type="button" class="amountMinus"><img src="../img/catalog/arrows_circle_minus.svg" alt=""></button>
					<input class="amount__Score" value="${product.count}" readonly>
					<button type="button" class="amountPlus"><img src="../img/catalog/arrows_circle_plus.svg" alt=""></button>
					</div>
	
					<button type="button" class="cart__remove"><img src="../img/catalog/arrows_circle_remove.svg" alt=""></button>
					
				</div>
			</div>
		`;
		}
		checkCart();
		cartProducts.insertAdjacentHTML('beforeend', cartProduct);
		
}
function changeCount(e) {
	const tapProduct = e.target.closest('.cart__product');
	const article = tapProduct.querySelector('.cart__article').value.replace(/Арт. /, '');
	if (e.target.closest('button') !== null && e.target.closest('button').classList.contains('amountMinus')) {
		
		buyList.forEach((product) => {
			if (product.article === article) {
				product.count--;
				if (product.count === 0) {
					tapProduct.remove();
				}
			}
		})
		saveToLocalStorage();
		cartProducts.innerHTML = '';
		buyList.forEach(product => renderBuyList(product));
		
	}
	if (e.target.closest('button') !== null && e.target.closest('button').classList.contains('amountPlus')) {
		buyList.forEach((product) => {
			if (product.article === article) {
				product.count++;
			}
		})
		saveToLocalStorage();
		cartProducts.innerHTML = '';
		buyList.forEach(product => renderBuyList(product));
	}
	checkCart();
}

function checkCart() {
	if (buyList.length !== 0 ) { // buyPage.classList.contains('open')
		buyIcon.classList.remove('none');
	} else {
		buyIcon.classList.add('none');
	}
}

// Отправляем форму
submitBuyForm();

function submitBuyForm() {
	const form = document.querySelector('#buyForm');
	const btnSubmitForm = document.querySelector('#buyFormSubmit');

	if (form) {
		btnSubmitForm.addEventListener('click', (e) => {
			let error = validateBuyForm();
			if (error === 0) {
				// form.submit();
				e.preventDefault();
			} else {
				e.preventDefault();
			}
		})
	}
}

function validateBuyForm() {
	const form = document.querySelector('#buyForm');

	let error = 0;
	let inputFields = form.querySelectorAll('._req');

	for (let i = 0; i < inputFields.length; i++) {
		const el = inputFields[i];
		formRemoveError(el);

		if (el.id == 'buyFormName') {
			if (el.value == '') {
				formAddError(el);
				error++;
			}
		} else if (el.id == 'buyFormOrgan') {
			if (el.value == '') {
				formAddError(el);
				error++;
			}
		} else if (el.id == 'buyFormEmail') {
			if (emailTest(el)) {
				formAddError(el);
				error++;
			}
		} else if (form.querySelector('.cart__products'.innerHTML == '')) {
			// formAddError(el);
			error++;
		}

	}
	return error;
}

function formAddError(el) {
	el.parentElement.classList.add('_error');
	el.classList.add('_error');
}
function formRemoveError(el) {
	el.parentElement.classList.remove('_error');
	el.classList.remove('_error');
}
function emailTest(el) {
	return !/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,8})+$/.test(el.value);
}
